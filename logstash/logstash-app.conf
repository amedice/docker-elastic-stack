input {
  file {
    type => "osb-app-consumer"
    start_position => "beginning"
    path => [
    					"/tmp/logs/CONSUMER_*.log"
    				]
		tags => [osb,app,consumer]
  }
  file {
    type => "osb-app-enablement"
    start_position => "beginning"
    path => [
    					"/tmp/logs/ENABLEMENT_*.log"
    				]
		tags => [osb,app,enablement]
  }
  file {
    type => "osb-app-enterprise"
    start_position => "beginning"
    path => [
    					"/tmp/logs/ENTERPRISE_*.log"
    				]
		tags => [osb,app,enterprise]
  }
}
filter {
  multiline {
    pattern => "^\["
    negate => true
    what => "previous"
  }
  grok {
    match => [
      "message", "\[%{DATA:msg_timestamp}\] \[%{DATA:msg_level}\] \[OSBLogger] :: (?<break_line>(.|\r|\n)*) \[ID: %{DATA:msg_id} => %{DATA:msg_bound}] >>"
    ]
  }
  mutate {
    remove_field => [ "break_line" ]  # remove unused stuff
  }
} 
output {
  elasticsearch { 
    hosts => ["elasticsearch1:9200"] 
  }
  stdout { 
    codec => rubydebug 
  }
}